{
	"name": "boq-fed-template",
	"description": "BOQ FED Template",
	"version": "0.0.1",
	"license": "UNLICENSED",
	"author": {
		"name": "Deloitte Digital",
		"url": "http://www.deloittedigital.com/au"
	},
	"repository": {
		"type": "git",
		"url": ""
	},
	"engines": {
		"node": ">= 10.9.0"
	},
	"publishConfig": {
		"email": "email@deloitte.com.au",
		"always-auth": "true",
		"registry": "https://cicd.shared-services.boq.local/nexus/repository/boq-fed-build/",
		"_auth": "anVuZS5jaHVhbmc6bUg0b2NkVW1RZzd4NHVkQ1RxMS4="
	},
	"files": [
		"build",
		"readme.md"
	],
	"browserslist": [
		"last 2 versions",
		"IE 11",
		"iOS >= 8"
	],
	"jest": {
		"setupFilesAfterEnv": [
			"<rootDir>/scripts/setupJest.js"
		],
		"testPathIgnorePatterns": [
			"/node_modules/",
			"<rootDir>/cypress/"
		]
	},
	"lint-staged": {
		"*.{js,json,css}": [
			"prettier --write",
			"git add"
		]
	},
	"devDependencies": {
		"@babel/cli": "^7.5.0",
		"@babel/core": "^7.5.4",
		"@deloitte-digital-au/babel-preset-app-react": "^1.5.0",
		"@deloitte-digital-au/eslint-config-react": "^3.4.0",
		"@deloitte-digital-au/webpack-config-react": "^1.5.0",
		"@storybook/addon-actions": "^5.1.9",
		"@storybook/addon-knobs": "^5.1.9",
		"@storybook/addons": "^5.1.9",
		"@storybook/react": "^5.1.9",
		"babel-core": "^7.0.0-bridge.0",
		"babel-eslint": "^8.2.6",
		"babel-jest": "^24.8.0",
		"babel-loader": "^8.0.6",
		"babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
		"clean-webpack-plugin": "^2.0.2",
		"copy-webpack-plugin": "^4.6.0",
		"cypress": "^3.4.1",
		"downshift": "^3.2.10",
		"eslint": "^4.19.1",
		"eslint-plugin-import": "^2.18.0",
		"file-loader": "^1.1.11",
		"glob": "^7.1.4",
		"html-loader": "^0.5.5",
		"http-server": "^0.12.3",
		"husky": "^1.3.1",
		"jest": "^24.8.0",
		"jest-dom": "^1.12.1",
		"jest-junit": "^5.2.0",
		"jest-mock-now": "^1.2.1",
		"js-beautify": "^1.10.0",
		"lint-staged": "^7.3.0",
		"markdown-loader": "^3.0.0",
		"mini-css-extract-plugin": "^0.6.0",
		"mkdirp": "^0.5.1",
		"npm-run-all": "^4.1.5",
		"patch-package": "^5.1.2",
		"plop": "^2.4.0",
		"prettier": "1.14.0",
		"react-aria-modal": "^3.1.0",
		"react-codemirror": "^1.0.0",
		"react-testing-library": "^4.1.9",
		"regenerator-runtime": "^0.12.1",
		"rimraf": "^2.6.3",
		"storybook-readme": "^5.0.8",
		"stylelint": "^9.10.1",
		"stylelint-cli": "^1.1.0",
		"stylelint-config-deloitte": "^1.0.0",
		"stylelint-junit-formatter": "^0.1.0",
		"svgo": "^1.3.0",
		"wait-on": "^2.1.2",
		"webpack": "^4.35.3",
		"webpack-cli": "^3.3.6",
		"zip-webpack-plugin": "^3.0.0"
	},
	"dependencies": {
		"@glidejs/glide": "^3.3.0",
		"axios": "^0.18.1",
		"babel-polyfill": "^6.26.0",
		"d3": "^5.9.7",
		"ddbreakpoints": "1.1.3",
		"element-closest": "^2.0.2",
		"enquire.js": "2.1.6",
		"formik": "^1.5.8",
		"handlebars": "^4.7.6",
		"jquery": "3.3.1",
		"js-cookie": "^2.2.0",
		"json-form-builder-react": "git+ssh://git@dvcs.deloittedigital.com.au:22/fed/json-form-builder-react.git#2f2eb65b2bb7592dfdc0dd92a85d6b75d9f",
		"lodash.get": "^4.4.2",
		"lodash.topath": "^4.5.2",
		"moment": "^2.24.0",
		"mustache": "^3.0.1",
		"normalize.css": "8.0.0",
		"prismjs": "^1.16.0",
		"react": "^16.8.6",
		"react-animate-height": "^2.0.15",
		"react-datepicker": "^1.8.0",
		"react-dom": "^16.8.6",
		"react-habitat": "^1.0.1",
		"rhythm-form-react": "git+ssh://git@dvcs.deloittedigital.com.au:22/rthm/rhythm-form-react.git#cf2d4e88e3b4573800d81e82c5ac958ca4f30411",
		"sass-lint": "^1.13.1",
		"saxicon": "^1.3.0",
		"scroll-to-element": "^2.0.3",
		"throttle-debounce": "^2.1.0",
		"velocity-animate": "^1.5.2"
	},
	"scripts": {
		"postinstall": "patch-package",
		"precommit": "lint-staged",
		"start": "npm run middleman:dev",
		"build": "npm run lint && FONTS_BASE_PATH=\"../resources/fonts\" npm run build:no-lint",
		"build:preview": "npm run lint && FONTS_BASE_PATH=\"/placeholder/fonts\" npm run build:no-lint",
		"build:beautify": "node scripts/beautify-build.js",
		"build:no-lint": "npm-run-all --sequential clean:build middleman:build build:beautify",
		"clean:build": "rimraf ./build",
		"clean:middleman-pipeline": "rimraf ./.tmp",
		"middleman:dev": "npm run clean:middleman-pipeline && bundle exec middleman server --port 4455",
		"middleman:build": "npm run clean:middleman-pipeline && bundle exec middleman build",
		"webpack:dev": "webpack --config webpack.config.js --mode development --watch --nobranding --color",
		"webpack:build": "webpack --config webpack.config.js --mode production --nobranding --color",
		"storybook": "start-storybook -p 9001 -c .storybook -s templates/placeholder,.tmp/webpack",
		"storybook:build": "build-storybook -c .storybook -o .tmp/storybook/storybook -s templates/placeholder",
		"storybook:dev": "build-storybook -c .storybook -o .tmp/storybook/storybook --watch -s templates/placeholder",
		"test": "jest",
		"test:watch": "jest --watch",
		"cypress": "cypress open --env basePath=\"http://localhost:9001\"",
		"eslint": "eslint --ignore-path .eslintignore \"source/**/*.js\" \"scripts/**/*.js\"",
		"eslint-fix": "eslint --fix --ignore-path .eslintignore \"source/**/*.js\" \"scripts/**/*.js\"",
		"stylelint": "stylelint  --ignore-path .stylelintignore \"source/styles/**/*.scss\"",
		"lint": "npm run stylelint && npm run eslint",
		"prettier:manual": "prettier --write \"*.{js,json,scss}\"",
		"ci:eslint": "npm run eslint -- --format junit --output-file reports/eslint.xml --quiet",
		"ci:stylelint": "npm run stylelint --silent -- --custom-formatter node_modules/stylelint-junit-formatter > reports/stylelint.xml;",
		"ci:build": "npm run build:no-lint",
		"ci:start": "http-server build -p 4455",
		"ci:test": "JEST_JUNIT_OUTPUT=\"./reports/jest.xml\" npm test -- --reporters=\"jest-junit\"",
		"ci:cypress-run": "wait-on http://localhost:4455 && cypress run --env basePath=\"http://localhost:4455/storybook\" --reporter junit --reporter-options \"mochaFile=reports/cypress.xml\"",
		"ci:cypress": "npm-run-all --parallel --race ci:start ci:cypress-run",
		"ci:add-version": "node scripts/add-version.js",
		"icons": "npm-run-all --sequential icons:optimise icons:saxicon",
		"icons:saxicon": "node scripts/saxicon.js",
		"icons:optimise": "svgo --folder ./source/icons/svgs-src && svgo --folder ./templates/placeholder/image && svgo --folder ./templates/placeholder/image/icons",
		"generate": "npx plop"
	},
	"husky": {
		"hooks": {
			"pre-commit": "npm run lint"
		}
	}
}
